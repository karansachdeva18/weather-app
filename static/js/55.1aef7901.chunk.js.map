{"version":3,"file":"static/js/55.1aef7901.chunk.js","mappings":"oOAgEA,EAxDmB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAgD3B,OACE,iCACE,iDACA,eAAIC,UAAU,cAAd,SAjDKF,EAAMG,KAAI,SAACC,EAAOC,GACvB,IAAQC,EAAsBF,EAAtBE,GAAIC,EAAkBH,EAAlBG,QAASC,EAASJ,EAATI,KACrB,GAAsBC,EAAAA,EAAAA,GAAYH,GAA1BI,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACb,OACE,gBAA2BT,UAAU,mBAArC,WACE,iBAAKA,UAAU,aAAf,WACE,4BAASQ,KACT,yBAAMC,QAGR,gBAAKT,UAAU,aAAf,UACE,SAAC,IAAD,CACEU,KAAMC,EAAAA,EAAMN,EAAQ,GAAGO,MACvBC,MAAOR,EAAQ,GAAGS,YAClBC,KAAM,UAGV,iBAAKf,UAAU,aAAf,WACE,SAAC,IAAD,CACEU,KAAMM,EAAAA,IACNH,MAAO,YACPb,UAAU,mBAEZ,6BACGiB,EAAAA,EAAAA,GAAYX,EAAKY,MAClB,+BACW,WAAVnB,EAAqB,IAAM,WAGhC,iBAAKC,UAAU,aAAf,WACE,SAAC,IAAD,CACEU,KAAMS,EAAAA,IACNN,MAAO,YACPb,UAAU,mBAGZ,6BACGiB,EAAAA,EAAAA,GAAYX,EAAKc,MAClB,+BACW,WAAVrB,EAAqB,IAAM,YAnClC,gBAAkBI,c,mECZbQ,EAAQ,CACjBU,aAAcC,EAAAA,IACdC,QAAQC,EAAAA,IACRC,KAAKC,EAAAA,IACLC,KAAKC,EAAAA,IACLC,KAAKC,EAAAA,IACLC,MAAMD,EAAAA,IACNE,KAAKF,EAAAA,IACLG,KAAKH,EAAAA,IACLI,IAAIJ,EAAAA,IACJK,KAAKL,EAAAA,IACLM,IAAIN,EAAAA,IACJO,OAAOP,EAAAA,IACPQ,QAAQR,EAAAA,IACRS,MAAMC,EAAAA,IACNC,OAAOC,EAAAA,M,4ECjBX,IAAMC,EAAM,CACR,EAAG,SACH,EAAG,SACH,EAAG,UACH,EAAG,YACH,EAAG,WACH,EAAG,SACH,EAAG,YAIMpC,EAAc,SAACH,GAAuB,IAAnBwC,EAAkB,wDAClD,GAAGA,EACC,OAAO,IAAIC,KAAU,IAALzC,GAAW0C,eAE3B,IAAIrC,EAAO,IAAIoC,KAAU,IAALzC,GACpB,MAAO,CAACK,KAAK,GAAD,OAAIA,EAAKsC,UAAT,YAAsBtC,EAAKuC,YAAcxC,IAAKmC,EAAKlC,EAAKwC,YAI3DC,EAAU,SAAC9C,GACpB,IAAI+C,EAAO,IAAIN,KAAU,IAALzC,GAAWgD,WAC/B,OAAOD,EAAO,GAAP,UAAeA,EAAO,GAAtB,iBAAmCA,EAAnC,S,qDCtBJ,IAAMlC,EAAc,SAACX,GACxB,OAAQA,EAAM+C,QAAQ","sources":["components/DailyStats/DailyStats.js","constants/icons.js","utils/computeDate.js","utils/temperature.js"],"sourcesContent":["import { faArrowDown, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ICONS } from \"../../constants/icons\";\r\nimport { computeDate } from \"../../utils/computeDate\";\r\nimport { computeTemp } from \"../../utils/temperature\";\r\nimport \"./DailyStats.styles.scss\";\r\n\r\nconst DailyStats = ({ daily, units }) => {\r\n  const renderDailyStats = () => {\r\n    return daily.map((stats, index) => {\r\n      const { dt, weather, temp } = stats;\r\n      const { day, date } = computeDate(dt);\r\n      return (\r\n        <li key={`daily_${index}`} className='daily-stats-list'>\r\n          <div className='list-items'>\r\n            <strong>{day}</strong>\r\n            <div>{date}</div>\r\n          </div>\r\n\r\n          <div className='list-items'>\r\n            <FontAwesomeIcon\r\n              icon={ICONS[weather[0].main]}\r\n              title={weather[0].description}\r\n              size={'2x'}\r\n            />\r\n          </div>\r\n          <div className='list-items'>\r\n            <FontAwesomeIcon\r\n              icon={faArrowDown}\r\n              title={\"Min. Temp\"}\r\n              className='min-max-icons'\r\n            />\r\n            <span>\r\n              {computeTemp(temp.min)}\r\n              <sup>o</sup>\r\n              {units === \"metric\" ? \"C\" : \"F\"}\r\n            </span>\r\n          </div>\r\n          <div className='list-items'>\r\n            <FontAwesomeIcon\r\n              icon={faArrowUp}\r\n              title={\"Max. Temp\"}\r\n              className='min-max-icons'\r\n              \r\n            />\r\n            <span>\r\n              {computeTemp(temp.max)}\r\n              <sup>o</sup>\r\n              {units === \"metric\" ? \"C\" : \"F\"}\r\n            </span>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <h2>Next 8 Days Weather</h2>\r\n      <ul className='daily-stats'>{renderDailyStats()}</ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DailyStats;\r\n","import { faCloud, faCloudBolt, faCloudShowersHeavy, faCloudSunRain, faSmog, faSnowflake, faSun } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const ICONS = {\r\n    Thunderstorm: faCloudBolt,\r\n    Drizzle:faCloudSunRain,\r\n    Rain:faCloudShowersHeavy,\r\n    Snow:faSnowflake,\r\n    Mist:faSmog,\r\n    Smoke:faSmog,\r\n    Haze:faSmog,\r\n    Dust:faSmog,\r\n    Fog:faSmog,\r\n    Sand:faSmog,\r\n    Ash:faSmog,\r\n    Squall:faSmog,\r\n    Tornado:faSmog,\r\n    Clear:faSun,\r\n    Clouds:faCloud\r\n}","const DAYS ={\r\n    0: 'Sunday',\r\n    1: 'Monday',\r\n    2: 'Tuesday',\r\n    3: 'Wednesday',\r\n    4: 'Thursday',\r\n    5: 'Friday',\r\n    6: 'Saturday'\r\n    \r\n}\r\n\r\nexport const computeDate = (dt, fulldt = false) =>{\r\nif(fulldt){\r\n    return new Date(dt * 1000).toDateString();\r\n}else{\r\n    let date = new Date(dt * 1000)\r\n    return {date:`${date.getDate()}/${date.getMonth()}`, day: DAYS[date.getDay()]}\r\n}\r\n}\r\n\r\nexport const getTime = (dt)=>{\r\n    let time = new Date(dt * 1000).getHours();\r\n    return time > 12 ? `${time - 12} PM` : `${time} AM`\r\n\r\n}","export const computeTemp = (temp) =>{\r\n    return (temp).toFixed(0)\r\n}"],"names":["daily","units","className","map","stats","index","dt","weather","temp","computeDate","day","date","icon","ICONS","main","title","description","size","faArrowDown","computeTemp","min","faArrowUp","max","Thunderstorm","faCloudBolt","Drizzle","faCloudSunRain","Rain","faCloudShowersHeavy","Snow","faSnowflake","Mist","faSmog","Smoke","Haze","Dust","Fog","Sand","Ash","Squall","Tornado","Clear","faSun","Clouds","faCloud","DAYS","fulldt","Date","toDateString","getDate","getMonth","getDay","getTime","time","getHours","toFixed"],"sourceRoot":""}