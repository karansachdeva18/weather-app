{"version":3,"file":"static/js/318.64916bef.chunk.js","mappings":"qMAqCA,EAhCqB,SAAC,GAAsB,IAArBA,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MACrBC,EAAgEF,EAAhEE,SAAUC,EAAsDH,EAAtDG,SAAUC,EAA4CJ,EAA5CI,WAAYC,EAAgCL,EAAhCK,WAAYC,EAAoBN,EAApBM,QAASC,EAAWP,EAAXO,OAC5D,OACI,qBAASC,UAAU,0BAAnB,WACI,4BACI,0BAAKN,EAAL,QACA,wCAEJ,4BACI,0BAAKC,EAAL,UACA,wCAEJ,4BACI,0BAAKC,EAAL,WACA,0CAEJ,4BACI,2BAAKK,EAAAA,EAAAA,GAAYJ,GAAjB,KAA8B,+BAA9B,IAAsD,WAAVJ,EAAqB,IAAM,QACvE,0CAEJ,4BACI,yBAAKS,EAAAA,EAAAA,GAAQJ,MACb,uCAEJ,4BACI,yBAAKI,EAAAA,EAAAA,GAAQH,MACb,0C,4EC/BhB,IAAMI,EAAM,CACR,EAAG,SACH,EAAG,SACH,EAAG,UACH,EAAG,YACH,EAAG,WACH,EAAG,SACH,EAAG,YAIMC,EAAc,SAACC,GAAuB,IAAnBC,EAAkB,wDAClD,GAAGA,EACC,OAAO,IAAIC,KAAU,IAALF,GAAWG,eAE3B,IAAIC,EAAO,IAAIF,KAAU,IAALF,GACpB,MAAO,CAACI,KAAK,GAAD,OAAIA,EAAKC,UAAT,YAAsBD,EAAKE,YAAcC,IAAKT,EAAKM,EAAKI,YAI3DX,EAAU,SAACG,GACpB,IAAIS,EAAO,IAAIP,KAAU,IAALF,GAAWU,WAC/B,OAAOD,EAAO,GAAP,UAAeA,EAAO,GAAtB,iBAAmCA,EAAnC,S,qDCtBJ,IAAMb,EAAc,SAACe,GACxB,OAAQA,EAAMC,QAAQ","sources":["components/CurrentStats/CurrentStats.js","utils/computeDate.js","utils/temperature.js"],"sourcesContent":["import React from 'react';\r\nimport { getTime } from '../../utils/computeDate';\r\nimport { computeTemp } from '../../utils/temperature';\r\nimport './CurrentStats.styles.scss'\r\n\r\nconst CurrentStats = ({weather, units}) => {\r\n    const {humidity, pressure, wind_speed, feels_like, sunrise, sunset} =  weather;\r\n    return (\r\n        <section className=\"current-stats-container\">\r\n            <div>\r\n                <h4>{humidity}%</h4>\r\n                <p>Humidity</p>\r\n            </div>\r\n            <div>\r\n                <h4>{pressure}hPA</h4>\r\n                <p>Pressure</p>\r\n            </div>\r\n            <div>\r\n                <h4>{wind_speed} m/s</h4>\r\n                <p>Wind Speed</p>\r\n            </div>\r\n            <div>\r\n                <h4>{computeTemp(feels_like)} <sup>o</sup> {units === 'metric' ? \"C\" : \"F\"}</h4>\r\n                <p>Feels Like</p>\r\n            </div>\r\n            <div>\r\n                <h4>{getTime(sunrise)}</h4>\r\n                <p>Sunrise</p>\r\n            </div>\r\n            <div>\r\n                <h4>{getTime(sunset)}</h4>\r\n                <p>Sunset</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CurrentStats\r\n","const DAYS ={\r\n    0: 'Sunday',\r\n    1: 'Monday',\r\n    2: 'Tuesday',\r\n    3: 'Wednesday',\r\n    4: 'Thursday',\r\n    5: 'Friday',\r\n    6: 'Saturday'\r\n    \r\n}\r\n\r\nexport const computeDate = (dt, fulldt = false) =>{\r\nif(fulldt){\r\n    return new Date(dt * 1000).toDateString();\r\n}else{\r\n    let date = new Date(dt * 1000)\r\n    return {date:`${date.getDate()}/${date.getMonth()}`, day: DAYS[date.getDay()]}\r\n}\r\n}\r\n\r\nexport const getTime = (dt)=>{\r\n    let time = new Date(dt * 1000).getHours();\r\n    return time > 12 ? `${time - 12} PM` : `${time} AM`\r\n\r\n}","export const computeTemp = (temp) =>{\r\n    return (temp).toFixed(0)\r\n}"],"names":["weather","units","humidity","pressure","wind_speed","feels_like","sunrise","sunset","className","computeTemp","getTime","DAYS","computeDate","dt","fulldt","Date","toDateString","date","getDate","getMonth","day","getDay","time","getHours","temp","toFixed"],"sourceRoot":""}